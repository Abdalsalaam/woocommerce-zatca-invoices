name: Update Requires Headers

on:
  schedule:
    - cron: '0 0 * * 1' # Run every Monday at midnight UTC
  workflow_dispatch: # Allow manual trigger

jobs:
  update-headers:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the repository
      - name: Checkout Repository
        uses: actions/checkout@v3

      # Step 2: Fetch the latest WooCommerce release
      - name: Fetch Latest WooCommerce Release
        id: fetch_wc_release
        run: |
          LATEST_RELEASE=$(curl -s https://api.github.com/repos/woocommerce/woocommerce/releases/latest | jq -r '.tag_name')
          echo "Latest WooCommerce Release: $LATEST_RELEASE"
          echo "LATEST_RELEASE=$LATEST_RELEASE" >> $GITHUB_ENV
          curl -L -o woocommerce.zip "https://github.com/woocommerce/woocommerce/releases/download/$LATEST_RELEASE/woocommerce.zip"

      # Step 3: Unzip the WooCommerce release
      - name: Unzip WooCommerce Release
        run: |
          unzip -q woocommerce.zip
          echo "Contents of WooCommerce directory:"
          ls -l woocommerce

      # Step 4: Debug Extension File Path
      - name: Verify Extension File
        run: |
          EXTENSION_FILE="woocommerce-zatca-invoices.php"
          if [ -f "$EXTENSION_FILE" ]; then
            echo "Extension file exists: $EXTENSION_FILE"
          else
            echo "Error: Extension file ($EXTENSION_FILE) not found."
            exit 1
          fi

      # Step 5: Compare and Update Headers
      - name: Compare and Update Headers
        id: compare_and_update
        run: |
          # Define paths
          WC_CORE_FILE="woocommerce/woocommerce.php"
          EXTENSION_FILE="woocommerce-zatca-invoices.php"
          BRANCH_NAME="update-requires-headers-$(date +%Y%m%d%H%M%S)"
          CHANGES_MADE=false

          # Verify WooCommerce core file exists
          if [ ! -f "$WC_CORE_FILE" ]; then
            echo "Error: WooCommerce core file ($WC_CORE_FILE) not found."
            exit 1
          fi

          # Extract headers from WooCommerce core file
          REQUIRES_AT_LEAST=$(grep -oP 'Requires at least: \K[\d.]+' "$WC_CORE_FILE")
          REQUIRES_PHP=$(grep -oP 'Requires PHP: \K[\d.]+' "$WC_CORE_FILE")

          echo "Extracted headers from WooCommerce core:"
          echo "  Requires at least: $REQUIRES_AT_LEAST"
          echo "  Requires PHP: $REQUIRES_PHP"

          # Extract headers from the extension file
          CURRENT_REQUIRES_AT_LEAST=$(grep -oP 'Requires at least: \K[\d.]+' "$EXTENSION_FILE" || echo "Not found")
          CURRENT_REQUIRES_PHP=$(grep -oP 'Requires PHP: \K[\d.]+' "$EXTENSION_FILE" || echo "Not found")
          WC_REQUIRES_AT_LEAST=$(grep -oP 'WC requires at least: \K[\d.]+' "$EXTENSION_FILE" || echo "Not found")

          echo "Extracted headers from extension file:"
          echo "  Requires at least: $CURRENT_REQUIRES_AT_LEAST"
          echo "  Requires PHP: $CURRENT_REQUIRES_PHP"
          echo "  WC requires at least: $WC_REQUIRES_AT_LEAST"

          # Ensure extracted values are valid
          if [ -z "$REQUIRES_AT_LEAST" ] || [ -z "$REQUIRES_PHP" ]; then
            echo "Error: Could not extract headers from WooCommerce core file."
            exit 1
          fi

          if [ "$CURRENT_REQUIRES_AT_LEAST" = "Not found" ] || [ "$CURRENT_REQUIRES_PHP" = "Not found" ] || [ "$WC_REQUIRES_AT_LEAST" = "Not found" ]; then
            echo "Error: Could not extract headers from the extension file."
            exit 1
          fi

          # Compare headers
          if [ "$CURRENT_REQUIRES_AT_LEAST" != "$REQUIRES_AT_LEAST" ] || [ "$CURRENT_REQUIRES_PHP" != "$REQUIRES_PHP" ] || [ "$WC_REQUIRES_AT_LEAST" != "$LATEST_RELEASE" ]; then
            echo "Headers are outdated. Updating..."

            # Update the headers
            sed -i "s/Requires at least: .*/Requires at least: $REQUIRES_AT_LEAST/" "$EXTENSION_FILE"
            sed -i "s/Requires PHP: .*/Requires PHP: $REQUIRES_PHP/" "$EXTENSION_FILE"
            sed -i "s/WC requires at least: .*/WC requires at least: $LATEST_RELEASE/" "$EXTENSION_FILE"

            # Create a new branch
            git checkout -b "$BRANCH_NAME"

            # Commit the changes
            git config user.name "github-actions[bot]"
            git config user.email "github-actions[bot]@users.noreply.github.com"
            git add "$EXTENSION_FILE"
            git commit -m "Update Requires headers to match WooCommerce $LATEST_RELEASE"

            CHANGES_MADE=true
          else
            echo "Headers are already up to date. No changes needed."
          fi

          # Output the branch name and changes status
          echo "BRANCH_NAME=$BRANCH_NAME" >> $GITHUB_ENV
          echo "CHANGES_MADE=$CHANGES_MADE" >> $GITHUB_ENV

      # Step 6: Create Pull Request (Only if Changes Are Made)
      - name: Create Pull Request
        if: env.CHANGES_MADE == 'true'
        uses: peter-evans/create-pull-request@v5
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          branch: ${{ env.BRANCH_NAME }}
          commit-message: "Update Requires headers"
          title: "Update Requires headers for WooCommerce compatibility"
          body: |
            This PR updates the following headers to ensure compatibility with the latest WooCommerce release:
            - `Requires at least`: $REQUIRES_AT_LEAST
            - `Requires PHP`: $REQUIRES_PHP
            - `WC requires at least`: $LATEST_RELEASE

            Please review and merge.
